javascript简介 ：javascript基于ECMASCript   ECMA2016 ES7 ECMA2017 ES8

基本的数据类型：（六个）
null   undefind   String   Boolean   Number   Object 
空         未定义    字符串    布尔值    数据类型      对象

堆和栈：栈是 一层一层的放数据 叫做压栈  往出放数据的话叫做弹出
堆的话是把数据都放进去 找的话是在指定的区域找

运算符：==等于 ===全等 +加 ++加加 -减 --减减  /取余  %  +=加等于 -=减等于 
try catch  用来捕获错误的，不会影响下面代码的执行

字符串方法：replace  替换  用来在字符串种替换字符
isNaN 判断是否 是一个数字 
取反 为true不是数字
0.1+0.2不等于0.3（0.1+0.2 =0.30000000000000004 ）

typeof 判断数据类型
Object.prototype.toString.call()
判断数据类型,可以直接判断是数组还是对象

for in ：对于数组取得是下标；对于对象取的是name

原型原型链
每个函数都会有一个prototype属性这个属性叫做原型
在每个实例对象都会有一个__proto__属性这个属性叫做隐士原型
每个实例对象的__proto__的隐士原型 都会指向自身的prototype的原型
每个prototype原型都有一个constructor属性，指向它关联的构造函数
原型链
获取对象属性时，如果对象本身没有这个属性，那就会去他的原型`__proto__`上去找，
如果还查不到，就去找原型的原型，一直找到最顶层(`Object.prototype`)为止。
Object.prototype对象也有__proto__属性值为null。

正则表达式
/^\d+$/.test()
^ 开始符
+表示多个
$结束符
*可以没有或者多个
.test() 
{} 有两个数字 表示范围 
数字, 表示至少几个
手机号
/^1[356789][0-9]\d{8}$/ 
密码
/^[\da-zA-Z]{6-12}$/

结尾加; 
开启严格模式
命名符合小驼峰命名法

模板字符串    `${}`

箭头函数  this谁调用指向谁
()=>{
  
}

push() 尾部追加
push(...) 可以把数组中的值分出来在一个一个追加过去
