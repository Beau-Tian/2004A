1.写出自己理解的原型和原型链
原型：每个函数都有 prototype 属性，该属性指向原型对象；使用原型对象的好处是所有对象实例共享它所包含的属性和方法。
原型链：主要解决了继承的问题；每个对象都拥有一个原型对象，通过__proto__ 指针指向其原型对象，并从中继承方法和属性，同时原型对象也可能拥有原型，这样一层一层，最终指向 null。	

2.function y(num) {
    console.log(num);
    var num = 1;
    console.log(num);
    console.log(fn);
    var fn = function() {
       console.log(1);
   }
   console.log(fn);
   function fn(){
       console.log(2);
   }
   console.log(fn);
}
y(2);
请写出最终答案。
答案：2，1，2，1，1
3.function y() {
    console.log(num);
    var num = 1;
    console.log(num);
    function num() { console.log(3); }
    function num() { console.log(5); }
    console.log(num);
}
y();
请写出最终答案。
答案：5，1，1
4.function y() {    
    var num = 1;
    console.log(num);
    function num() { console.log(3); }
    console.log(num);
}
y();
答案：1，1
5.for(var i = 0;i<10;i++){ 
	setTimeout(()=>{ console.log(i); },100);
 }
//写出三种能正常打印0-9的方法
1.  for (let i = 0; i < 10; i++) {
        setTimeout(() => {
            console.log(i)
        }, 1000)
    }

2.  for (var i = 0; i < 10; i++) {
        setTimeout(console.log, 1000, i)
    }

6.密码必须为6-15位的数字、字母、_-的组合。请使用正则表达式验证。
var arr = /^[a-zA-Z0-9_]{6,15}$/;
   console.log(pwd.test("666sheyis_"))  true
   console.log(pwd.test("www123asdfghjklasdsfsdfsfdasdf...."))  false

7.//注意审题
function A() {}
function B() {}
B.prototype = Object.create(A.prototype);
B.prototype.constructor = B;
function C() {}
C.prototype = Object.create(B.prototype);
C.prototype.constructor = C;

var c1 = new C();
c1.prototype === C.__proto__.prototype
c1.__proto__ === C.prototype
c1.__proto__.prototype === B.__proto__.prototype
c1.__proto__.__proto__ === B.prototype
c1.__proto__.__proto__.__proto__ === A.prototype
c1.__proto__.constructor === C.prototype.constructor
c1.__proto__.constructor.prototype === C.prototype.constructor.prototype
c1.__proto__.constructor.prototype.constructor === C
C.prototype.constructor === C
C.prototype.constructor.prototype === C.prototype
C.prototype.constructor.prototype.constructor === C
C.prototype.__proto__ === B.prototype